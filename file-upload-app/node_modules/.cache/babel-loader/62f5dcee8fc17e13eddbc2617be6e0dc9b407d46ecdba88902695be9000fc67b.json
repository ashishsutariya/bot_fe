{"ast":null,"code":"var _jsxFileName = \"D:\\\\Grad\\\\Internship\\\\QABOT\\\\file-upload-app\\\\src\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './ChatComponent.css'; // Relative path to the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async () => {\n    if (input.trim() === '') {\n      return;\n    }\n    const message = {\n      text: input,\n      isUserMessage: true\n    };\n    setMessages(prevMessages => [...prevMessages, message]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/chat', {\n        input_string: input\n      });\n      const answer = response.data.answer;\n      const botMessage = {\n        text: answer,\n        isUserMessage: false\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUserMessage ? 'user-message' : 'bot-message'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Buffering...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"sVGGnSpJyr44tGn0fmOMIwNVzbg=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","sendMessage","trim","message","text","isUserMessage","prevMessages","response","post","input_string","answer","data","botMessage","error","console","handleInputChange","e","target","value","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Grad/Internship/QABOT/file-upload-app/src/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './ChatComponent.css'; // Relative path to the CSS file\r\n\r\nconst ChatComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const message = {\r\n      text: input,\r\n      isUserMessage: true,\r\n    };\r\n\r\n    setMessages((prevMessages) => [...prevMessages, message]);\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/chat', {\r\n        input_string: input,\r\n      });\r\n\r\n      const answer = response.data.answer;\r\n      const botMessage = {\r\n        text: answer,\r\n        isUserMessage: false,\r\n      };\r\n\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.isUserMessage ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input type=\"text\" value={input} onChange={handleInputChange} />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n      {isLoading && <div className=\"loader\">Buffering...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}