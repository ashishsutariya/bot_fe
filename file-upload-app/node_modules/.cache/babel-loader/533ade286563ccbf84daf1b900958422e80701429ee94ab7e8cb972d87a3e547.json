{"ast":null,"code":"var _jsxFileName = \"D:\\\\Grad\\\\Internship\\\\QABOT\\\\file-upload-app\\\\src\\\\ChatComponent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatContainerRef = useRef(null);\n  const sendMessage = async () => {\n    if (input.trim() === '') {\n      return;\n    }\n    const message = {\n      text: input,\n      isUserMessage: true\n    };\n    setMessages(prevMessages => [...prevMessages, message]);\n    setInput('');\n    try {\n      const response = await axios.post('http://localhost:8000/api/chat', {\n        input_string: input\n      });\n      const answer = response.data.answer;\n      const botMessage = {\n        text: answer,\n        isUserMessage: false\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  useEffect(() => {\n    // Scroll to the bottom of the chat container when new messages are added\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      ref: chatContainerRef,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUserMessage ? 'user-message' : 'bot-message'}`,\n        children: message.isUserMessage ? message.text : /*#__PURE__*/_jsxDEV(TypingText, {\n          text: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"5qOrwFkmrYkm+dBDxoJROMkyrzg=\");\n_c = ChatComponent;\nconst TypingText = _ref => {\n  _s2();\n  let {\n    text\n  } = _ref;\n  const [typingText, setTypingText] = useState('');\n  const typingRef = useRef(null);\n  useEffect(() => {\n    let currentText = '';\n    let currentIndex = 0;\n    const typingInterval = setInterval(() => {\n      currentText += text[currentIndex];\n      setTypingText(currentText);\n      currentIndex++;\n      if (currentIndex === text.length) {\n        clearInterval(typingInterval);\n      }\n    }, 100);\n    return () => {\n      clearInterval(typingInterval);\n    };\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ref: typingRef,\n    children: typingText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n};\n_s2(TypingText, \"Bgm3vv9ujXBjZEpM1r8eLQK8SRU=\");\n_c2 = TypingText;\nexport default ChatComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatComponent\");\n$RefreshReg$(_c2, \"TypingText\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","input","setInput","chatContainerRef","sendMessage","trim","message","text","isUserMessage","prevMessages","response","post","input_string","answer","data","botMessage","error","console","handleInputChange","e","target","value","current","scrollTop","scrollHeight","className","children","ref","map","index","TypingText","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","_ref","_s2","typingText","setTypingText","typingRef","currentText","currentIndex","typingInterval","setInterval","length","clearInterval","_c2","$RefreshReg$"],"sources":["D:/Grad/Internship/QABOT/file-upload-app/src/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChatComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const chatContainerRef = useRef(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const message = {\r\n      text: input,\r\n      isUserMessage: true,\r\n    };\r\n\r\n    setMessages((prevMessages) => [...prevMessages, message]);\r\n    setInput('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/chat', {\r\n        input_string: input,\r\n      });\r\n\r\n      const answer = response.data.answer;\r\n      const botMessage = {\r\n        text: answer,\r\n        isUserMessage: false,\r\n      };\r\n\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the chat container when new messages are added\r\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-messages\" ref={chatContainerRef}>\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.isUserMessage ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            {message.isUserMessage ? (\r\n              message.text\r\n            ) : (\r\n              <TypingText text={message.text} />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input type=\"text\" value={input} onChange={handleInputChange} />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TypingText = ({ text }) => {\r\n  const [typingText, setTypingText] = useState('');\r\n  const typingRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let currentText = '';\r\n    let currentIndex = 0;\r\n\r\n    const typingInterval = setInterval(() => {\r\n      currentText += text[currentIndex];\r\n      setTypingText(currentText);\r\n      currentIndex++;\r\n\r\n      if (currentIndex === text.length) {\r\n        clearInterval(typingInterval);\r\n      }\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(typingInterval);\r\n    };\r\n  }, [text]);\r\n\r\n  return <span ref={typingRef}>{typingText}</span>;\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}